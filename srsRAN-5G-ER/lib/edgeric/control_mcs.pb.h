// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_mcs.proto

#ifndef PROTOBUF_INCLUDED_control_5fmcs_2eproto
#define PROTOBUF_INCLUDED_control_5fmcs_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_control_5fmcs_2eproto 

namespace protobuf_control_5fmcs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_control_5fmcs_2eproto
class mcs_control;
class mcs_controlDefaultTypeInternal;
extern mcs_controlDefaultTypeInternal _mcs_control_default_instance_;
namespace google {
namespace protobuf {
template<> ::mcs_control* Arena::CreateMaybeMessage<::mcs_control>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class mcs_control : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mcs_control) */ {
 public:
  mcs_control();
  virtual ~mcs_control();

  mcs_control(const mcs_control& from);

  inline mcs_control& operator=(const mcs_control& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  mcs_control(mcs_control&& from) noexcept
    : mcs_control() {
    *this = ::std::move(from);
  }

  inline mcs_control& operator=(mcs_control&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const mcs_control& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const mcs_control* internal_default_instance() {
    return reinterpret_cast<const mcs_control*>(
               &_mcs_control_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(mcs_control* other);
  friend void swap(mcs_control& a, mcs_control& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline mcs_control* New() const final {
    return CreateMaybeMessage<mcs_control>(NULL);
  }

  mcs_control* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<mcs_control>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const mcs_control& from);
  void MergeFrom(const mcs_control& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(mcs_control* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float mcs = 2;
  int mcs_size() const;
  void clear_mcs();
  static const int kMcsFieldNumber = 2;
  float mcs(int index) const;
  void set_mcs(int index, float value);
  void add_mcs(float value);
  const ::google::protobuf::RepeatedField< float >&
      mcs() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_mcs();

  // uint32 ran_index = 1;
  void clear_ran_index();
  static const int kRanIndexFieldNumber = 1;
  ::google::protobuf::uint32 ran_index() const;
  void set_ran_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mcs_control)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > mcs_;
  mutable int _mcs_cached_byte_size_;
  ::google::protobuf::uint32 ran_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_control_5fmcs_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// mcs_control

// uint32 ran_index = 1;
inline void mcs_control::clear_ran_index() {
  ran_index_ = 0u;
}
inline ::google::protobuf::uint32 mcs_control::ran_index() const {
  // @@protoc_insertion_point(field_get:mcs_control.ran_index)
  return ran_index_;
}
inline void mcs_control::set_ran_index(::google::protobuf::uint32 value) {
  
  ran_index_ = value;
  // @@protoc_insertion_point(field_set:mcs_control.ran_index)
}

// repeated float mcs = 2;
inline int mcs_control::mcs_size() const {
  return mcs_.size();
}
inline void mcs_control::clear_mcs() {
  mcs_.Clear();
}
inline float mcs_control::mcs(int index) const {
  // @@protoc_insertion_point(field_get:mcs_control.mcs)
  return mcs_.Get(index);
}
inline void mcs_control::set_mcs(int index, float value) {
  mcs_.Set(index, value);
  // @@protoc_insertion_point(field_set:mcs_control.mcs)
}
inline void mcs_control::add_mcs(float value) {
  mcs_.Add(value);
  // @@protoc_insertion_point(field_add:mcs_control.mcs)
}
inline const ::google::protobuf::RepeatedField< float >&
mcs_control::mcs() const {
  // @@protoc_insertion_point(field_list:mcs_control.mcs)
  return mcs_;
}
inline ::google::protobuf::RepeatedField< float >*
mcs_control::mutable_mcs() {
  // @@protoc_insertion_point(field_mutable_list:mcs_control.mcs)
  return &mcs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_control_5fmcs_2eproto
