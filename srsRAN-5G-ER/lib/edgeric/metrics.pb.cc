// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

#include "metrics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metrics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metrics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UeMetrics;
}  // namespace protobuf_metrics_2eproto
class UeMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UeMetrics>
      _instance;
} _UeMetrics_default_instance_;
class MetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metrics>
      _instance;
} _Metrics_default_instance_;
namespace protobuf_metrics_2eproto {
static void InitDefaultsUeMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UeMetrics_default_instance_;
    new (ptr) ::UeMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UeMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UeMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUeMetrics}, {}};

static void InitDefaultsMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Metrics_default_instance_;
    new (ptr) ::Metrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Metrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Metrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetrics}, {
      &protobuf_metrics_2eproto::scc_info_UeMetrics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UeMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metrics.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, rnti_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, cqi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, snr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, tx_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, rx_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, dl_buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, ul_buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UeMetrics, dl_tbs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Metrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Metrics, tti_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Metrics, ue_metrics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::UeMetrics)},
  { 13, -1, sizeof(::Metrics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UeMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Metrics_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metrics.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmetrics.proto\"\215\001\n\tUeMetrics\022\014\n\004rnti\030\001 "
      "\001(\r\022\013\n\003cqi\030\002 \001(\r\022\013\n\003snr\030\003 \001(\002\022\020\n\010tx_byte"
      "s\030\004 \001(\002\022\020\n\010rx_bytes\030\005 \001(\002\022\021\n\tdl_buffer\030\006"
      " \001(\r\022\021\n\tul_buffer\030\007 \001(\r\022\016\n\006dl_tbs\030\010 \001(\002\""
      ":\n\007Metrics\022\017\n\007tti_cnt\030\001 \001(\r\022\036\n\nue_metric"
      "s\030\002 \003(\0132\n.UeMetricsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metrics.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metrics_2eproto

// ===================================================================

void UeMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UeMetrics::kRntiFieldNumber;
const int UeMetrics::kCqiFieldNumber;
const int UeMetrics::kSnrFieldNumber;
const int UeMetrics::kTxBytesFieldNumber;
const int UeMetrics::kRxBytesFieldNumber;
const int UeMetrics::kDlBufferFieldNumber;
const int UeMetrics::kUlBufferFieldNumber;
const int UeMetrics::kDlTbsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UeMetrics::UeMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metrics_2eproto::scc_info_UeMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UeMetrics)
}
UeMetrics::UeMetrics(const UeMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rnti_, &from.rnti_,
    static_cast<size_t>(reinterpret_cast<char*>(&dl_tbs_) -
    reinterpret_cast<char*>(&rnti_)) + sizeof(dl_tbs_));
  // @@protoc_insertion_point(copy_constructor:UeMetrics)
}

void UeMetrics::SharedCtor() {
  ::memset(&rnti_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dl_tbs_) -
      reinterpret_cast<char*>(&rnti_)) + sizeof(dl_tbs_));
}

UeMetrics::~UeMetrics() {
  // @@protoc_insertion_point(destructor:UeMetrics)
  SharedDtor();
}

void UeMetrics::SharedDtor() {
}

void UeMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UeMetrics::descriptor() {
  ::protobuf_metrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UeMetrics& UeMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metrics_2eproto::scc_info_UeMetrics.base);
  return *internal_default_instance();
}


void UeMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:UeMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rnti_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dl_tbs_) -
      reinterpret_cast<char*>(&rnti_)) + sizeof(dl_tbs_));
  _internal_metadata_.Clear();
}

bool UeMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UeMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rnti = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rnti_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cqi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cqi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float snr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &snr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tx_bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tx_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rx_bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rx_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dl_buffer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dl_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ul_buffer = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ul_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dl_tbs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dl_tbs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UeMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UeMetrics)
  return false;
#undef DO_
}

void UeMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UeMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rnti = 1;
  if (this->rnti() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rnti(), output);
  }

  // uint32 cqi = 2;
  if (this->cqi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cqi(), output);
  }

  // float snr = 3;
  if (this->snr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->snr(), output);
  }

  // float tx_bytes = 4;
  if (this->tx_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->tx_bytes(), output);
  }

  // float rx_bytes = 5;
  if (this->rx_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rx_bytes(), output);
  }

  // uint32 dl_buffer = 6;
  if (this->dl_buffer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->dl_buffer(), output);
  }

  // uint32 ul_buffer = 7;
  if (this->ul_buffer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ul_buffer(), output);
  }

  // float dl_tbs = 8;
  if (this->dl_tbs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->dl_tbs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UeMetrics)
}

::google::protobuf::uint8* UeMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UeMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rnti = 1;
  if (this->rnti() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rnti(), target);
  }

  // uint32 cqi = 2;
  if (this->cqi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cqi(), target);
  }

  // float snr = 3;
  if (this->snr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->snr(), target);
  }

  // float tx_bytes = 4;
  if (this->tx_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->tx_bytes(), target);
  }

  // float rx_bytes = 5;
  if (this->rx_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rx_bytes(), target);
  }

  // uint32 dl_buffer = 6;
  if (this->dl_buffer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->dl_buffer(), target);
  }

  // uint32 ul_buffer = 7;
  if (this->ul_buffer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ul_buffer(), target);
  }

  // float dl_tbs = 8;
  if (this->dl_tbs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->dl_tbs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UeMetrics)
  return target;
}

size_t UeMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UeMetrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rnti = 1;
  if (this->rnti() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rnti());
  }

  // uint32 cqi = 2;
  if (this->cqi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cqi());
  }

  // float snr = 3;
  if (this->snr() != 0) {
    total_size += 1 + 4;
  }

  // float tx_bytes = 4;
  if (this->tx_bytes() != 0) {
    total_size += 1 + 4;
  }

  // float rx_bytes = 5;
  if (this->rx_bytes() != 0) {
    total_size += 1 + 4;
  }

  // uint32 dl_buffer = 6;
  if (this->dl_buffer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dl_buffer());
  }

  // uint32 ul_buffer = 7;
  if (this->ul_buffer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ul_buffer());
  }

  // float dl_tbs = 8;
  if (this->dl_tbs() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UeMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UeMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const UeMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UeMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UeMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UeMetrics)
    MergeFrom(*source);
  }
}

void UeMetrics::MergeFrom(const UeMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UeMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rnti() != 0) {
    set_rnti(from.rnti());
  }
  if (from.cqi() != 0) {
    set_cqi(from.cqi());
  }
  if (from.snr() != 0) {
    set_snr(from.snr());
  }
  if (from.tx_bytes() != 0) {
    set_tx_bytes(from.tx_bytes());
  }
  if (from.rx_bytes() != 0) {
    set_rx_bytes(from.rx_bytes());
  }
  if (from.dl_buffer() != 0) {
    set_dl_buffer(from.dl_buffer());
  }
  if (from.ul_buffer() != 0) {
    set_ul_buffer(from.ul_buffer());
  }
  if (from.dl_tbs() != 0) {
    set_dl_tbs(from.dl_tbs());
  }
}

void UeMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UeMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UeMetrics::CopyFrom(const UeMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UeMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UeMetrics::IsInitialized() const {
  return true;
}

void UeMetrics::Swap(UeMetrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UeMetrics::InternalSwap(UeMetrics* other) {
  using std::swap;
  swap(rnti_, other->rnti_);
  swap(cqi_, other->cqi_);
  swap(snr_, other->snr_);
  swap(tx_bytes_, other->tx_bytes_);
  swap(rx_bytes_, other->rx_bytes_);
  swap(dl_buffer_, other->dl_buffer_);
  swap(ul_buffer_, other->ul_buffer_);
  swap(dl_tbs_, other->dl_tbs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UeMetrics::GetMetadata() const {
  protobuf_metrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Metrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metrics::kTtiCntFieldNumber;
const int Metrics::kUeMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metrics::Metrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metrics_2eproto::scc_info_Metrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Metrics)
}
Metrics::Metrics(const Metrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ue_metrics_(from.ue_metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tti_cnt_ = from.tti_cnt_;
  // @@protoc_insertion_point(copy_constructor:Metrics)
}

void Metrics::SharedCtor() {
  tti_cnt_ = 0u;
}

Metrics::~Metrics() {
  // @@protoc_insertion_point(destructor:Metrics)
  SharedDtor();
}

void Metrics::SharedDtor() {
}

void Metrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metrics::descriptor() {
  ::protobuf_metrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metrics& Metrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metrics_2eproto::scc_info_Metrics.base);
  return *internal_default_instance();
}


void Metrics::Clear() {
// @@protoc_insertion_point(message_clear_start:Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ue_metrics_.Clear();
  tti_cnt_ = 0u;
  _internal_metadata_.Clear();
}

bool Metrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Metrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tti_cnt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tti_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UeMetrics ue_metrics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ue_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Metrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Metrics)
  return false;
#undef DO_
}

void Metrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tti_cnt = 1;
  if (this->tti_cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tti_cnt(), output);
  }

  // repeated .UeMetrics ue_metrics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ue_metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ue_metrics(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Metrics)
}

::google::protobuf::uint8* Metrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tti_cnt = 1;
  if (this->tti_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tti_cnt(), target);
  }

  // repeated .UeMetrics ue_metrics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ue_metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ue_metrics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Metrics)
  return target;
}

size_t Metrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Metrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .UeMetrics ue_metrics = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ue_metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ue_metrics(static_cast<int>(i)));
    }
  }

  // uint32 tti_cnt = 1;
  if (this->tti_cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tti_cnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  const Metrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Metrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Metrics)
    MergeFrom(*source);
  }
}

void Metrics::MergeFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ue_metrics_.MergeFrom(from.ue_metrics_);
  if (from.tti_cnt() != 0) {
    set_tti_cnt(from.tti_cnt());
  }
}

void Metrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metrics::CopyFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metrics::IsInitialized() const {
  return true;
}

void Metrics::Swap(Metrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metrics::InternalSwap(Metrics* other) {
  using std::swap;
  CastToBase(&ue_metrics_)->InternalSwap(CastToBase(&other->ue_metrics_));
  swap(tti_cnt_, other->tti_cnt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metrics::GetMetadata() const {
  protobuf_metrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UeMetrics* Arena::CreateMaybeMessage< ::UeMetrics >(Arena* arena) {
  return Arena::CreateInternal< ::UeMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Metrics* Arena::CreateMaybeMessage< ::Metrics >(Arena* arena) {
  return Arena::CreateInternal< ::Metrics >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
