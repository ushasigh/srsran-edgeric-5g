# This configuration file example shows how to configure the srsRAN Project gNB to allow srsUE to connect to it. 
# This specific example uses ZMQ in place of a USRP for the RF-frontend, and creates an FDD cell with 10 MHz bandwidth. 
# To run the srsRAN Project gNB with this config, use the following command: 
#   sudo ./gnb -c gnb_zmq.yaml

amf:
  addr: 127.0.0.100                  # The address or hostname of the AMF.
  bind_addr: 127.0.0.1               # A local IP that the gNB binds to for traffic from the AMF.

ru_sdr:
  device_driver: zmq                # The RF driver name.
  device_args: tx_port=tcp://127.0.0.1:2101,rx_port=tcp://127.0.0.1:2100,base_srate=11.52 ##### Ushasi: For 20Mhz - use 23.04e6 # Optionally pass arguments to the selected RF driver.
  srate: 11.52                      ##### Ushasi: 23.06 if 20MHz - RF sample rate might need to be adjusted according to selected bandwidth.
  tx_gain: 75                       # Transmit gain of the RF might need to adjusted to the given situation.
  rx_gain: 75                       # Receive gain of the RF might need to adjusted to the given situation.

cell_cfg:
  dl_arfcn: 368500                  # ARFCN of the downlink carrier (center frequency).
  band: 3                           # The NR band.
  channel_bandwidth_MHz: 10         ##### Ushasi: Can be 20 - Bandwith in MHz. Number of PRBs will be automatically derived.
  common_scs: 15                    # Subcarrier spacing in kHz used for data.
  plmn: "00101"                     # PLMN broadcasted by the gNB.
  tac: 7                            # Tracking area code (needs to match the core configuration).
  pdcch:
    common:
      ss0_index: 0                  # Set search space zero index to match srsUE capabilities
      coreset0_index: 6             ##### Ushasi: 12 for 20 MHz - Set search CORESET Zero index to match srsUE capabilities
    dedicated:
      ss2_type: common              # Search Space type, has to be set to common
      dci_format_0_1_and_1_1: false # Set correct DCI format (fallback)
  prach:                            ########## Ushasi: Important when you run multiple UEs
    prach_config_index: 1           # Sets PRACH config to match what is expected by srsUE
    total_nof_ra_preambles: 64      # Sets number of available PRACH preambles
    nof_ssb_per_ro: 1               # Sets the number of SSBs per RACH occasion.
    nof_cb_preambles_per_ssb: 64    # Sets the number of contention based preambles per SSB.
  sched_expert_cfg:
    policy_sched_cfg:
      pf_sched:
        pf_sched_fairness_coeff: 1.5
  csi:
    csi_rs_enabled: true
    csi_rs_period: 20
  # pdsch:
  #   olla_cqi_inc_step: 0.001        # Enable OLLA with a small increment step.
  #   olla_target_bler: 0.01          # Set the target BLER for OLLA.
  #   olla_max_cqi_offset: 4          # Set the maximum offset for CQI adjustments by OLLA.

cu_cp:
  inactivity_timer: 7200            # Sets the UE/PDU Session/DRB inactivity timer to 7200 seconds. Supported: [1 - 7200].

log:
  filename: /tmp/gnb.log            # Path of the log file.
  all_level: debug #debug #info                   # Logging level applied to all layers.
  hex_max_size: 0

pcap:
  mac_enable: false                 # Set to true to enable MAC-layer PCAPs.
  mac_filename: /tmp/gnb_mac.pcap   # Path where the MAC PCAP is stored.
  ngap_enable: false                # Set to true to enable NGAP PCAPs.
  ngap_filename: /tmp/gnb_ngap.pcap # Path where the NGAP PCAP is stored.

# pcap:
#   rlc_enable: true
#   rlc_filename: ../pcaps/gnb_rlc.pcap
#   rlc_rb_type: all
#   mac_enable: true                                             # Set to true to enable MAC-layer PCAP>
#   mac_filename: ../pcaps/gnb_mac.pcap                                 # Path where the MAC PCAP is stored.
#   ngap_enable: true                                            # Set to true to enable NGAP PCAPs.
#   ngap_filename: ../pcaps/gnb_ngap.pcap                               # Path where the NGAP PCAP is stored.
#   # gtpu_enable: true
#   # gtpu_filename: ../pcaps/gnb_gtpu.pcap  